---
// Component Imports
import "../styles/theme.css"
import "../styles/blog.css"
import BaseHead from "../components/BaseHead.astro"
import BlogList from "/src/components/BlogList.jsx"
import BaseTopOfBody from "src/components/BaseTopOfBody.astro"

interface MarkdownFrontmatter {
  date: number
  updatedDate?: number
  title: string
  description: string
  tags: string[]
}

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = "Web Dev Simplified Blog"
let description = "Web Dev Simplified Blog"
let permalink = "https://blog.webdevsimplified.com"

// Data Fetching: List all Markdown posts in the repo.

let allMarkdownPosts = await Astro.glob<MarkdownFrontmatter>("./**/*.mdx")
const allPosts = allMarkdownPosts
  .map(post => ({
    title: post.frontmatter.title,
    description: post.frontmatter.description,
    tags: post.frontmatter.tags,
    date: new Date(post.frontmatter.date),
    updatedDate: post.frontmatter.updatedDate
      ? new Date(post.frontmatter.updatedDate)
      : undefined,
    url: post.url,
  }))
  .sort((a, b) => b.date.valueOf() - a.date.valueOf())

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---

<html lang="en">
  <head>
    <BaseHead {title} {description} {permalink} />

    <style>
      .content {
        margin-top: 4rem;
        margin-bottom: 8rem;
      }

      .content :global(main > * + *) {
        margin-top: 1rem;
      }
    </style>
  </head>

  <body>
    <BaseTopOfBody />
    <BlogList client:load allPosts={allPosts} />
  </body>
</html>
